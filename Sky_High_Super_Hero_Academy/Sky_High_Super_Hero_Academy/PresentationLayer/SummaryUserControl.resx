<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>