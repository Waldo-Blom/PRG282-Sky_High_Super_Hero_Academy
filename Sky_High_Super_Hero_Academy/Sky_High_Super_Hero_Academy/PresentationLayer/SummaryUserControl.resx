<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAyAAAAMgCAYAAADbcAZoAAAABGdBTUEAALGPC/xhBQAAHgtJREFUeF7t
        3UGu3FhyhlEvpRdiA4I31UPXTuw9Gh7TeGpJ9RTKzEdG8pJxb5wD9KQa8KCT/IOfBLj+7d8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJaxbdtfG8Ak4oYBABMRH8Bs4o4B
        AJMQH8CM4pYBABMQH8Cs4p4BAMWJD2BmcdMAgMLEBzC7uGsAQFHiA1hB3DYAoCDxAawi7hsAUIz4AFYS
        Nw4AKER8AKuJOwcAFCE+gBXFrQMAChAfwKri3gEANxMfwMri5gEANxIfwOri7gEANxEfQAdx+wCAG4gP
        oIu4fwDAxcQH0EncQADgQuID6CbuIABwEfEBdBS3EAC4gPgAuop7CAAMJj6AzuImAgADiQ+gu7iLAMAg
        4gNAgADAJcQHwL/EfQQATiY+AP4WNxIAOJH4APhd3EkA4CTiA+BPcSsBgBOID4DH4l4CAG8SHwDPxc0E
        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
        gPn9P8V52Kqiki19AAAAAElFTkSuQmCC
</value>
  </data>
</root>