<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>